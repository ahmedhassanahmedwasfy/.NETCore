// <auto-generated />
using System;
using DAL.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(MVCBaseDBContext))]
    partial class MVCBaseDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Models.Menu.tbl_Menu", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid?>("CreateUserID");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid?>("ModifyUserID");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.Property<Guid?>("ParentID");

                    b.Property<Guid?>("PrivilligeID");

                    b.Property<string>("icon");

                    b.Property<bool>("isPrivate");

                    b.Property<string>("link");

                    b.HasKey("ID");

                    b.HasIndex("ParentID");

                    b.HasIndex("PrivilligeID");

                    b.ToTable("Menus");

                    b.HasData(
                        new { ID = new Guid("ad0dc644-1514-4927-9cef-e5aae6395dff"), CreateDate = new DateTime(2018, 10, 3, 11, 12, 4, 968, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2018, 10, 3, 11, 12, 4, 968, DateTimeKind.Local), NameAr = " الادارة", NameEn = "administration", PrivilligeID = new Guid("e30604fe-23f3-4db5-8b33-fab4aa012887"), icon = "ion-settings", isPrivate = false, link = "" },
                        new { ID = new Guid("7d03551d-6ecb-47f2-92ad-cb7c60197f93"), CreateDate = new DateTime(2018, 10, 3, 11, 12, 4, 968, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2018, 10, 3, 11, 12, 4, 968, DateTimeKind.Local), NameAr = "المستخدمون", NameEn = "Users", ParentID = new Guid("ad0dc644-1514-4927-9cef-e5aae6395dff"), icon = "ion-person-stalker", isPrivate = false, link = "/pages/administration/users" },
                        new { ID = new Guid("5c9f8c7d-4c3d-4a43-94cb-94be4dc2e804"), CreateDate = new DateTime(2018, 10, 3, 11, 12, 4, 968, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2018, 10, 3, 11, 12, 4, 968, DateTimeKind.Local), NameAr = "المجموعات", NameEn = "groups", ParentID = new Guid("ad0dc644-1514-4927-9cef-e5aae6395dff"), icon = "fa fa-object-group", isPrivate = false, link = "/pages/administration/groups" }
                    );
                });

            modelBuilder.Entity("DAL.Models.tbl_GridSettings", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid?>("CreateUserID");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Key");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid?>("ModifyUserID");

                    b.Property<Guid>("UserID");

                    b.Property<string>("Value");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("GridSettings");
                });

            modelBuilder.Entity("DAL.Models.tbl_Setting", b =>
                {
                    b.Property<Guid>("ID");

                    b.Property<string>("Conf_Key");

                    b.Property<string>("Conf_Value");

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid?>("CreateUserID");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid?>("ModifyUserID");

                    b.HasKey("ID");

                    b.ToTable("Settings");

                    b.HasData(
                        new { ID = new Guid("4f9009f4-dbfd-48f0-94d3-528061a73af9"), Conf_Key = "Active_Directory_Domain", Conf_Value = "GETGROUP.com", CreateDate = new DateTime(2018, 10, 3, 11, 12, 4, 968, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2018, 10, 3, 11, 12, 4, 968, DateTimeKind.Local) }
                    );
                });

            modelBuilder.Entity("DAL.Models.UserManagement.tbl_Group", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid?>("CreateUserID");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid?>("ModifyUserID");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.HasKey("ID");

                    b.ToTable("Groups");

                    b.HasData(
                        new { ID = new Guid("5079283c-6e1c-4d86-890f-db366c4aee93"), CreateDate = new DateTime(2018, 10, 3, 11, 12, 4, 967, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2018, 10, 3, 11, 12, 4, 967, DateTimeKind.Local), NameAr = "AdminGroup", NameEn = "AdminGroup" },
                        new { ID = new Guid("134562ea-20c7-41c1-ae07-a97495b52f3e"), CreateDate = new DateTime(2018, 10, 3, 11, 12, 4, 967, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2018, 10, 3, 11, 12, 4, 967, DateTimeKind.Local), NameAr = "DoctorGroup", NameEn = "DoctorGroup" },
                        new { ID = new Guid("7d18d419-e865-47a7-a1ac-4a0a13cd74cd"), CreateDate = new DateTime(2018, 10, 3, 11, 12, 4, 967, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2018, 10, 3, 11, 12, 4, 967, DateTimeKind.Local), NameAr = "PatientGroup", NameEn = "PatientGroup" }
                    );
                });

            modelBuilder.Entity("DAL.Models.UserManagement.tbl_Grouptbl_User", b =>
                {
                    b.Property<Guid>("tbl_Group_ID");

                    b.Property<Guid>("tbl_User_ID");

                    b.HasKey("tbl_Group_ID", "tbl_User_ID");

                    b.HasIndex("tbl_User_ID");

                    b.ToTable("tbl_Grouptbl_User");
                });

            modelBuilder.Entity("DAL.Models.UserManagement.tbl_Privillige", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid?>("CreateUserID");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Key");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid?>("ModifyUserID");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.HasKey("ID");

                    b.ToTable("Privilliges");

                    b.HasData(
                        new { ID = new Guid("35781dc1-4318-460a-8793-bf0fa9466e3c"), CreateDate = new DateTime(2018, 10, 3, 11, 12, 4, 967, DateTimeKind.Local), IsDeleted = false, Key = "Page_Groups", ModifyDate = new DateTime(2018, 10, 3, 11, 12, 4, 967, DateTimeKind.Local), NameAr = "Page_Groups", NameEn = "Page_Groups" },
                        new { ID = new Guid("32c2aa7f-b3d9-431b-a2c6-da4f10deaa86"), CreateDate = new DateTime(2018, 10, 3, 11, 12, 4, 967, DateTimeKind.Local), IsDeleted = false, Key = "Page_Groups_Add", ModifyDate = new DateTime(2018, 10, 3, 11, 12, 4, 967, DateTimeKind.Local), NameAr = "Page_Groups_Add", NameEn = "Page_Groups_Add" },
                        new { ID = new Guid("b48d59d1-ae93-4f13-9835-87d5796c56cd"), CreateDate = new DateTime(2018, 10, 3, 11, 12, 4, 967, DateTimeKind.Local), IsDeleted = false, Key = "Page_Users", ModifyDate = new DateTime(2018, 10, 3, 11, 12, 4, 967, DateTimeKind.Local), NameAr = "Page_Users", NameEn = "Page_Users" },
                        new { ID = new Guid("1513eb3a-835b-492f-bcdd-32bd704b61e1"), CreateDate = new DateTime(2018, 10, 3, 11, 12, 4, 967, DateTimeKind.Local), IsDeleted = false, Key = "Page_Users_Add", ModifyDate = new DateTime(2018, 10, 3, 11, 12, 4, 967, DateTimeKind.Local), NameAr = "Page_Users_Add", NameEn = "Page_Users_Add" },
                        new { ID = new Guid("e30604fe-23f3-4db5-8b33-fab4aa012887"), CreateDate = new DateTime(2018, 10, 3, 11, 12, 4, 967, DateTimeKind.Local), IsDeleted = false, Key = "Page_administration", ModifyDate = new DateTime(2018, 10, 3, 11, 12, 4, 967, DateTimeKind.Local), NameAr = "Page_administration", NameEn = "Page_administration" }
                    );
                });

            modelBuilder.Entity("DAL.Models.UserManagement.tbl_Privilligetbl_Group", b =>
                {
                    b.Property<Guid>("tbl_Privillige_ID");

                    b.Property<Guid>("tbl_Group_ID");

                    b.HasKey("tbl_Privillige_ID", "tbl_Group_ID");

                    b.HasAlternateKey("tbl_Group_ID", "tbl_Privillige_ID");

                    b.ToTable("tbl_Privilligetbl_Group");
                });

            modelBuilder.Entity("DAL.Models.UserManagement.tbl_Privilligetbl_User", b =>
                {
                    b.Property<Guid>("tbl_Privillige_ID");

                    b.Property<Guid>("tbl_User_ID");

                    b.HasKey("tbl_Privillige_ID", "tbl_User_ID");

                    b.HasIndex("tbl_User_ID");

                    b.ToTable("tbl_Privilligetbl_User");
                });

            modelBuilder.Entity("DAL.Models.UserManagement.tbl_User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("ActivationEndDate");

                    b.Property<DateTime?>("ActivationStartDate");

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid?>("CreateUserID");

                    b.Property<string>("Email");

                    b.Property<string>("Image");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsThirdParty");

                    b.Property<string>("Mobile");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid?>("ModifyUserID");

                    b.Property<string>("Name");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.Property<string>("Password");

                    b.Property<string>("Secret");

                    b.Property<Guid?>("UserTypeID");

                    b.Property<bool>("isAD");

                    b.Property<bool>("isActivated");

                    b.HasKey("ID");

                    b.HasIndex("UserTypeID");

                    b.ToTable("Users");

                    b.HasData(
                        new { ID = new Guid("2ede22d1-c952-48c6-b896-51ad38d17abf"), ActivationEndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified), ActivationStartDate = new DateTime(2018, 10, 2, 11, 12, 4, 968, DateTimeKind.Local), CreateDate = new DateTime(2018, 10, 3, 11, 12, 4, 968, DateTimeKind.Local), Email = "admin1@mail.com", IsDeleted = false, IsThirdParty = false, ModifyDate = new DateTime(2018, 10, 3, 11, 12, 4, 968, DateTimeKind.Local), NameAr = "admin1", NameEn = "admin1", Password = "12345678", isAD = false, isActivated = true },
                        new { ID = new Guid("4c3b527e-fa15-4492-920a-67fb60b87d1b"), ActivationEndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified), ActivationStartDate = new DateTime(2018, 10, 2, 11, 12, 4, 968, DateTimeKind.Local), CreateDate = new DateTime(2018, 10, 3, 11, 12, 4, 968, DateTimeKind.Local), Email = "admi2n@mail.com", IsDeleted = false, IsThirdParty = false, ModifyDate = new DateTime(2018, 10, 3, 11, 12, 4, 968, DateTimeKind.Local), NameAr = "admin2", NameEn = "admin2", Password = "12345678", isAD = false, isActivated = true }
                    );
                });

            modelBuilder.Entity("DAL.Models.UserManagement.tbl_UserType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid?>("CreateUserID");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid?>("ModifyUserID");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.HasKey("ID");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new { ID = new Guid("917f19f5-c02d-4a0e-b273-65842c47eb1d"), CreateDate = new DateTime(2018, 10, 3, 11, 12, 4, 965, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2018, 10, 3, 11, 12, 4, 965, DateTimeKind.Local), NameAr = "مريض", NameEn = "Patient" },
                        new { ID = new Guid("31bd4014-8e78-4a12-8cf6-843174efd116"), CreateDate = new DateTime(2018, 10, 3, 11, 12, 4, 965, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2018, 10, 3, 11, 12, 4, 965, DateTimeKind.Local), NameAr = "طبيب", NameEn = "Doctor" },
                        new { ID = new Guid("8ff7b761-3b68-4a5d-b2ae-9d3a080286b0"), CreateDate = new DateTime(2018, 10, 3, 11, 12, 4, 965, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2018, 10, 3, 11, 12, 4, 965, DateTimeKind.Local), NameAr = "ادارة النظام", NameEn = "Administrator" }
                    );
                });

            modelBuilder.Entity("DAL.Models.Menu.tbl_Menu", b =>
                {
                    b.HasOne("DAL.Models.Menu.tbl_Menu")
                        .WithMany("Children")
                        .HasForeignKey("ParentID");

                    b.HasOne("DAL.Models.UserManagement.tbl_Privillige", "Privillige")
                        .WithMany()
                        .HasForeignKey("PrivilligeID");
                });

            modelBuilder.Entity("DAL.Models.tbl_GridSettings", b =>
                {
                    b.HasOne("DAL.Models.UserManagement.tbl_User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Models.UserManagement.tbl_Grouptbl_User", b =>
                {
                    b.HasOne("DAL.Models.UserManagement.tbl_Group", "Group")
                        .WithMany("tbl_Grouptbl_User")
                        .HasForeignKey("tbl_Group_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.Models.UserManagement.tbl_User", "User")
                        .WithMany("tbl_Grouptbl_User")
                        .HasForeignKey("tbl_User_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Models.UserManagement.tbl_Privilligetbl_Group", b =>
                {
                    b.HasOne("DAL.Models.UserManagement.tbl_Group", "Group")
                        .WithMany("tbl_Privilligetbl_Group")
                        .HasForeignKey("tbl_Group_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.Models.UserManagement.tbl_Privillige", "Privillige")
                        .WithMany("tbl_Privilligetbl_Group")
                        .HasForeignKey("tbl_Privillige_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Models.UserManagement.tbl_Privilligetbl_User", b =>
                {
                    b.HasOne("DAL.Models.UserManagement.tbl_Privillige", "Privillige")
                        .WithMany("tbl_Privilligetbl_User")
                        .HasForeignKey("tbl_Privillige_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.Models.UserManagement.tbl_User", "User")
                        .WithMany("tbl_Privilligetbl_User")
                        .HasForeignKey("tbl_User_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Models.UserManagement.tbl_User", b =>
                {
                    b.HasOne("DAL.Models.UserManagement.tbl_UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeID");
                });
#pragma warning restore 612, 618
        }
    }
}
