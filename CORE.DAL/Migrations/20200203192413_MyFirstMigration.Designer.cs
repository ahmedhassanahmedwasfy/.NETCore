// <auto-generated />
using System;
using CORE.DAL.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CORE.DAL.Migrations
{
    [DbContext(typeof(MVCBaseDBContext))]
    [Migration("20200203192413_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CORE.DAL.Models.Menu.tbl_Menu", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid?>("CreateUserID");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid?>("ModifyUserID");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.Property<Guid?>("ParentID");

                    b.Property<Guid?>("PrivilligeID");

                    b.Property<string>("icon");

                    b.Property<bool>("isPrivate");

                    b.Property<string>("link");

                    b.HasKey("ID");

                    b.HasIndex("ParentID");

                    b.HasIndex("PrivilligeID");

                    b.ToTable("Menus");

                    b.HasData(
                        new { ID = new Guid("10cc53ea-fd77-41a1-bdd7-dcb5e392401f"), CreateDate = new DateTime(2020, 2, 3, 23, 24, 12, 329, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2020, 2, 3, 23, 24, 12, 329, DateTimeKind.Local), NameAr = " الادارة", NameEn = "administration", PrivilligeID = new Guid("ce08770d-10d7-4305-a06b-e9c9f499b1c5"), icon = "ion-settings", isPrivate = false, link = "" },
                        new { ID = new Guid("68408935-7737-40b2-9b4a-7b73ed185462"), CreateDate = new DateTime(2020, 2, 3, 23, 24, 12, 329, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2020, 2, 3, 23, 24, 12, 329, DateTimeKind.Local), NameAr = "المستخدمون", NameEn = "Users", ParentID = new Guid("10cc53ea-fd77-41a1-bdd7-dcb5e392401f"), icon = "ion-person-stalker", isPrivate = false, link = "/pages/administration/users" },
                        new { ID = new Guid("26143422-3000-4289-8cb5-e5eae92a3f01"), CreateDate = new DateTime(2020, 2, 3, 23, 24, 12, 329, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2020, 2, 3, 23, 24, 12, 329, DateTimeKind.Local), NameAr = "المجموعات", NameEn = "groups", ParentID = new Guid("10cc53ea-fd77-41a1-bdd7-dcb5e392401f"), icon = "fa fa-object-group", isPrivate = false, link = "/pages/administration/groups" }
                    );
                });

            modelBuilder.Entity("CORE.DAL.Models.tbl_GridSettings", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid?>("CreateUserID");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Key");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid?>("ModifyUserID");

                    b.Property<Guid>("UserID");

                    b.Property<string>("Value");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("GridSettings");
                });

            modelBuilder.Entity("CORE.DAL.Models.tbl_Setting", b =>
                {
                    b.Property<Guid>("ID");

                    b.Property<string>("Conf_Key");

                    b.Property<string>("Conf_Value");

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid?>("CreateUserID");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid?>("ModifyUserID");

                    b.HasKey("ID");

                    b.ToTable("Settings");

                    b.HasData(
                        new { ID = new Guid("b9ffcc9a-057c-45cb-ae8f-3f0a59b1a46c"), Conf_Key = "Active_Directory_Domain", Conf_Value = "GETGROUP.com", CreateDate = new DateTime(2020, 2, 3, 23, 24, 12, 329, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2020, 2, 3, 23, 24, 12, 329, DateTimeKind.Local) }
                    );
                });

            modelBuilder.Entity("CORE.DAL.Models.UserManagement.tbl_Group", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid?>("CreateUserID");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid?>("ModifyUserID");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.HasKey("ID");

                    b.ToTable("Groups");

                    b.HasData(
                        new { ID = new Guid("491bfc04-49a1-4ade-a486-65bbfb835dd7"), CreateDate = new DateTime(2020, 2, 3, 23, 24, 12, 328, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2020, 2, 3, 23, 24, 12, 328, DateTimeKind.Local), NameAr = "AdminGroup", NameEn = "AdminGroup" },
                        new { ID = new Guid("ebc4ac81-a089-48a1-9fef-d6c97594161c"), CreateDate = new DateTime(2020, 2, 3, 23, 24, 12, 328, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2020, 2, 3, 23, 24, 12, 328, DateTimeKind.Local), NameAr = "DoctorGroup", NameEn = "DoctorGroup" },
                        new { ID = new Guid("6fffc88c-495b-42ae-b9a5-19c6cd74cf85"), CreateDate = new DateTime(2020, 2, 3, 23, 24, 12, 328, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2020, 2, 3, 23, 24, 12, 328, DateTimeKind.Local), NameAr = "PatientGroup", NameEn = "PatientGroup" }
                    );
                });

            modelBuilder.Entity("CORE.DAL.Models.UserManagement.tbl_Grouptbl_User", b =>
                {
                    b.Property<Guid>("tbl_Group_ID");

                    b.Property<Guid>("tbl_User_ID");

                    b.HasKey("tbl_Group_ID", "tbl_User_ID");

                    b.HasIndex("tbl_User_ID");

                    b.ToTable("tbl_Grouptbl_User");
                });

            modelBuilder.Entity("CORE.DAL.Models.UserManagement.tbl_Privillige", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid?>("CreateUserID");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Key");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid?>("ModifyUserID");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.HasKey("ID");

                    b.ToTable("Privilliges");

                    b.HasData(
                        new { ID = new Guid("ebb49f2c-2b4d-46d4-bd35-f58cdb59262c"), CreateDate = new DateTime(2020, 2, 3, 23, 24, 12, 328, DateTimeKind.Local), IsDeleted = false, Key = "Page_Groups", ModifyDate = new DateTime(2020, 2, 3, 23, 24, 12, 328, DateTimeKind.Local), NameAr = "Page_Groups", NameEn = "Page_Groups" },
                        new { ID = new Guid("6c0f378b-0c63-4201-b12b-f2c298518158"), CreateDate = new DateTime(2020, 2, 3, 23, 24, 12, 328, DateTimeKind.Local), IsDeleted = false, Key = "Page_Groups_Add", ModifyDate = new DateTime(2020, 2, 3, 23, 24, 12, 328, DateTimeKind.Local), NameAr = "Page_Groups_Add", NameEn = "Page_Groups_Add" },
                        new { ID = new Guid("c3069cd8-684d-431e-b7d1-a08e2334452a"), CreateDate = new DateTime(2020, 2, 3, 23, 24, 12, 328, DateTimeKind.Local), IsDeleted = false, Key = "Page_Users", ModifyDate = new DateTime(2020, 2, 3, 23, 24, 12, 328, DateTimeKind.Local), NameAr = "Page_Users", NameEn = "Page_Users" },
                        new { ID = new Guid("746a71b9-2f57-4840-8d15-8028f527134b"), CreateDate = new DateTime(2020, 2, 3, 23, 24, 12, 328, DateTimeKind.Local), IsDeleted = false, Key = "Page_Users_Add", ModifyDate = new DateTime(2020, 2, 3, 23, 24, 12, 328, DateTimeKind.Local), NameAr = "Page_Users_Add", NameEn = "Page_Users_Add" },
                        new { ID = new Guid("ce08770d-10d7-4305-a06b-e9c9f499b1c5"), CreateDate = new DateTime(2020, 2, 3, 23, 24, 12, 328, DateTimeKind.Local), IsDeleted = false, Key = "Page_administration", ModifyDate = new DateTime(2020, 2, 3, 23, 24, 12, 328, DateTimeKind.Local), NameAr = "Page_administration", NameEn = "Page_administration" }
                    );
                });

            modelBuilder.Entity("CORE.DAL.Models.UserManagement.tbl_Privilligetbl_Group", b =>
                {
                    b.Property<Guid>("tbl_Privillige_ID");

                    b.Property<Guid>("tbl_Group_ID");

                    b.HasKey("tbl_Privillige_ID", "tbl_Group_ID");

                    b.HasAlternateKey("tbl_Group_ID", "tbl_Privillige_ID");

                    b.ToTable("tbl_Privilligetbl_Group");
                });

            modelBuilder.Entity("CORE.DAL.Models.UserManagement.tbl_Privilligetbl_User", b =>
                {
                    b.Property<Guid>("tbl_Privillige_ID");

                    b.Property<Guid>("tbl_User_ID");

                    b.HasKey("tbl_Privillige_ID", "tbl_User_ID");

                    b.HasIndex("tbl_User_ID");

                    b.ToTable("tbl_Privilligetbl_User");

                    b.HasData(
                        new { tbl_Privillige_ID = new Guid("ebb49f2c-2b4d-46d4-bd35-f58cdb59262c"), tbl_User_ID = new Guid("692da5ee-4567-4b14-abac-943dd49d078d") },
                        new { tbl_Privillige_ID = new Guid("6c0f378b-0c63-4201-b12b-f2c298518158"), tbl_User_ID = new Guid("692da5ee-4567-4b14-abac-943dd49d078d") },
                        new { tbl_Privillige_ID = new Guid("c3069cd8-684d-431e-b7d1-a08e2334452a"), tbl_User_ID = new Guid("692da5ee-4567-4b14-abac-943dd49d078d") },
                        new { tbl_Privillige_ID = new Guid("746a71b9-2f57-4840-8d15-8028f527134b"), tbl_User_ID = new Guid("692da5ee-4567-4b14-abac-943dd49d078d") },
                        new { tbl_Privillige_ID = new Guid("ce08770d-10d7-4305-a06b-e9c9f499b1c5"), tbl_User_ID = new Guid("692da5ee-4567-4b14-abac-943dd49d078d") }
                    );
                });

            modelBuilder.Entity("CORE.DAL.Models.UserManagement.tbl_User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("ActivationEndDate");

                    b.Property<DateTime?>("ActivationStartDate");

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid?>("CreateUserID");

                    b.Property<string>("Email");

                    b.Property<string>("Image");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsThirdParty");

                    b.Property<string>("Mobile");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid?>("ModifyUserID");

                    b.Property<string>("Name");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.Property<string>("Password");

                    b.Property<string>("Secret");

                    b.Property<Guid?>("UserTypeID");

                    b.Property<bool>("isAD");

                    b.Property<bool>("isActivated");

                    b.HasKey("ID");

                    b.HasIndex("UserTypeID");

                    b.ToTable("Users");

                    b.HasData(
                        new { ID = new Guid("692da5ee-4567-4b14-abac-943dd49d078d"), ActivationStartDate = new DateTime(2020, 2, 2, 23, 24, 12, 330, DateTimeKind.Local), CreateDate = new DateTime(2020, 2, 3, 23, 24, 12, 330, DateTimeKind.Local), Email = "eng.ahmedhassan.eng@gmail.com", IsDeleted = false, IsThirdParty = false, Mobile = "01111376958", ModifyDate = new DateTime(2020, 2, 3, 23, 24, 12, 330, DateTimeKind.Local), Name = "eng.ahmedhassan.eng@gmail.com", NameAr = "احمد حسن", NameEn = "ahmed hassan", Password = "P@ssw0rd", UserTypeID = new Guid("89e3f1b8-8970-4556-8c57-daf40d540acd"), isAD = false, isActivated = true }
                    );
                });

            modelBuilder.Entity("CORE.DAL.Models.UserManagement.tbl_UserType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid?>("CreateUserID");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid?>("ModifyUserID");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.HasKey("ID");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new { ID = new Guid("606a1b07-fc72-4801-9e61-ff2ac353201a"), CreateDate = new DateTime(2020, 2, 3, 23, 24, 12, 326, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2020, 2, 3, 23, 24, 12, 326, DateTimeKind.Local), NameAr = "مريض", NameEn = "Patient" },
                        new { ID = new Guid("503e61cc-894b-44a4-b63e-52eb82bdfd44"), CreateDate = new DateTime(2020, 2, 3, 23, 24, 12, 326, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2020, 2, 3, 23, 24, 12, 326, DateTimeKind.Local), NameAr = "طبيب", NameEn = "Doctor" },
                        new { ID = new Guid("89e3f1b8-8970-4556-8c57-daf40d540acd"), CreateDate = new DateTime(2020, 2, 3, 23, 24, 12, 326, DateTimeKind.Local), IsDeleted = false, ModifyDate = new DateTime(2020, 2, 3, 23, 24, 12, 326, DateTimeKind.Local), NameAr = "ادارة النظام", NameEn = "Administrator" }
                    );
                });

            modelBuilder.Entity("CORE.DAL.Models.Menu.tbl_Menu", b =>
                {
                    b.HasOne("CORE.DAL.Models.Menu.tbl_Menu")
                        .WithMany("Children")
                        .HasForeignKey("ParentID");

                    b.HasOne("CORE.DAL.Models.UserManagement.tbl_Privillige", "Privillige")
                        .WithMany()
                        .HasForeignKey("PrivilligeID");
                });

            modelBuilder.Entity("CORE.DAL.Models.tbl_GridSettings", b =>
                {
                    b.HasOne("CORE.DAL.Models.UserManagement.tbl_User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CORE.DAL.Models.UserManagement.tbl_Grouptbl_User", b =>
                {
                    b.HasOne("CORE.DAL.Models.UserManagement.tbl_Group", "Group")
                        .WithMany("tbl_Grouptbl_User")
                        .HasForeignKey("tbl_Group_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CORE.DAL.Models.UserManagement.tbl_User", "User")
                        .WithMany("tbl_Grouptbl_User")
                        .HasForeignKey("tbl_User_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CORE.DAL.Models.UserManagement.tbl_Privilligetbl_Group", b =>
                {
                    b.HasOne("CORE.DAL.Models.UserManagement.tbl_Group", "Group")
                        .WithMany("tbl_Privilligetbl_Group")
                        .HasForeignKey("tbl_Group_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CORE.DAL.Models.UserManagement.tbl_Privillige", "Privillige")
                        .WithMany("tbl_Privilligetbl_Group")
                        .HasForeignKey("tbl_Privillige_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CORE.DAL.Models.UserManagement.tbl_Privilligetbl_User", b =>
                {
                    b.HasOne("CORE.DAL.Models.UserManagement.tbl_Privillige", "Privillige")
                        .WithMany("tbl_Privilligetbl_User")
                        .HasForeignKey("tbl_Privillige_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CORE.DAL.Models.UserManagement.tbl_User", "User")
                        .WithMany("tbl_Privilligetbl_User")
                        .HasForeignKey("tbl_User_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CORE.DAL.Models.UserManagement.tbl_User", b =>
                {
                    b.HasOne("CORE.DAL.Models.UserManagement.tbl_UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeID");
                });
#pragma warning restore 612, 618
        }
    }
}
